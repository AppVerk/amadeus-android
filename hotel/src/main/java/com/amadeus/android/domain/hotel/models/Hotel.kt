/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Hotel
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.amadeus.android.domain.hotel.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Hotel Content
 * @property type data type Hotel
 * @property hotelId Amadeus Property Code (8 chars) 
 * @property chainCode Brand (RT...) or Merchant (AD...) (Amadeus 2 chars Code) 
 * @property brandCode Brand (RT...) (Amadeus 2 chars Code). Small Properties distributed by Merchants may not have a Brand. Example: AD (Value Hotels) is the Provider/Merchant, and RT (Accor) is the Brand of the Property  
 * @property dupeId Unique Property identifier of the physical hotel. One physical hotel can be represented by different Providers, each one having its own &#x60;hotelID&#x60;. This attribute allows a client application to group together hotels that are actually the same.  
 * @property name Hotel Name
 * @property rating Hotel Stars (1-5)
 * @property description
 * @property amenities amenities (list)
 * @property media All Media (images...)
 * @property cityCode Warning: The IATA city code associated to the hotel (not necessary the real Hotel City)
 * @property latitude Hotel Latitude in decimal degrees (5 decimals)
 * @property longitude Hotel Longitude in decimal degrees (5 decimals)
 * @property hotelDistance
 * @property address
 * @property contact
 */
@JsonClass(generateAdapter = true)
data class Hotel(
    @Json(name = "type") @field:Json(name = "type") var type: Hotel.TypeEnum,
    @Json(name = "hotelId") @field:Json(name = "hotelId") var hotelId: String,
    @Json(name = "chainCode") @field:Json(name = "chainCode") var chainCode: String,
    @Json(name = "name") @field:Json(name = "name") var name: String,
    @Json(name = "brandCode") @field:Json(name = "brandCode") var brandCode: String? = null,
    @Json(name = "dupeId") @field:Json(name = "dupeId") var dupeId: String? = null,
    @Json(name = "rating") @field:Json(name = "rating") var rating: Hotel.RatingEnum? = null,
    @Json(name = "description") @field:Json(name = "description") var description: TextWithLanguageType? = null,
    @Json(name = "amenities") @field:Json(name = "amenities") var amenities: List<String>? = null,
    @Json(name = "media") @field:Json(name = "media") var media: List<HotelFile>? = null,
    @Json(name = "cityCode") @field:Json(name = "cityCode") var cityCode: String? = null,
    @Json(name = "latitude") @field:Json(name = "latitude") var latitude: Double? = null,
    @Json(name = "longitude") @field:Json(name = "longitude") var longitude: Double? = null,
    @Json(name = "hotelDistance") @field:Json(name = "hotelDistance") var hotelDistance: HotelDistance? = null,
    @Json(name = "address") @field:Json(name = "address") var address: AddressHotel? = null,
    @Json(name = "contact") @field:Json(name = "contact") var contact: ContactHotel? = null
) {
    /**
     * data type Hotel
     * Values: HOTEL
     */
    @JsonClass(generateAdapter = false)
    enum class TypeEnum(val value: String) {
        @Json(name = "hotel") HOTEL("hotel")
    }
    /**
     * Hotel Stars (1-5)
     * Values: _5, _4, _3, _2, _1
     */
    @JsonClass(generateAdapter = false)
    enum class RatingEnum(val value: String) {
        @Json(name = "5") _5("5"),
        @Json(name = "4") _4("4"),
        @Json(name = "3") _3("3"),
        @Json(name = "2") _2("2"),
        @Json(name = "1") _1("1")
    }
}
