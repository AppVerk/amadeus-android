/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Flight Offers Price
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.amadeus.android.domain.air.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * address information
 * @property category Category of the contact element
 * @property lines Line 1 &#x3D; Street address, Line 2 &#x3D; Apartment, suite, unit, building, floor, etc
 * @property postalCode Example: 74130
 * @property stateName Full state name
 * @property postalBox E.g. BP 220
 * @property cityName name of the city of the location; equal to name if the location is a city
 * @property cityCode IATA code of the city of the location; equal to IATAcode if the location is a city
 * @property countryName name of the country of the location
 * @property countryCode code of the country of the location in ISO standard
 * @property stateCode code of the state of the location if any
 * @property regionCode code of the region of the location in ISO standard
 * @property text Field containing a full unformatted address. Only applicable when the fields lines, postalCode, countryCode, cityName are not filled.
 */
@JsonClass(generateAdapter = true)
data class Address(
    @Json(name = "category") @field:Json(name = "category") var category: Address.CategoryEnum? = null,
    @Json(name = "lines") @field:Json(name = "lines") var lines: List<String>? = null,
    @Json(name = "postalCode") @field:Json(name = "postalCode") var postalCode: String? = null,
    @Json(name = "stateName") @field:Json(name = "stateName") var stateName: String? = null,
    @Json(name = "postalBox") @field:Json(name = "postalBox") var postalBox: String? = null,
    @Json(name = "cityName") @field:Json(name = "cityName") var cityName: String? = null,
    @Json(name = "cityCode") @field:Json(name = "cityCode") var cityCode: String? = null,
    @Json(name = "countryName") @field:Json(name = "countryName") var countryName: String? = null,
    @Json(name = "countryCode") @field:Json(name = "countryCode") var countryCode: String? = null,
    @Json(name = "stateCode") @field:Json(name = "stateCode") var stateCode: String? = null,
    @Json(name = "regionCode") @field:Json(name = "regionCode") var regionCode: String? = null,
    @Json(name = "text") @field:Json(name = "text") var text: String? = null
) {
    /**
     * Category of the contact element
     * Values: BUSINESS, PERSONAL, OTHER
     */
    @JsonClass(generateAdapter = false)
    enum class CategoryEnum(val value: String) {
        @Json(name = "BUSINESS") BUSINESS("BUSINESS"),
        @Json(name = "PERSONAL") PERSONAL("PERSONAL"),
        @Json(name = "OTHER") OTHER("OTHER")
    }
}
