/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Trip Parser
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.amadeus.android.domain.trip.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import org.threeten.bp.LocalDate

/**
 * @property PTC The 3 characters long Passenger Type Code of the traveller (e.g ADT, CHD...)
 * @property staffType The type of staff of the stakeholder (e.g BKB or SBY)
 * @property dateOfBirth The date of birth of the stakeholder
 * @property age The age of the stakeholder, made of a number from one to three characters long followed by the letter Y (e.g 5Y, 011Y, 59Y, ...)
 * @property specialSeat CBBG (Cabin Baggage) or EXST (Extra Seat)
 * @property identificationCode ID or CR field, must start with ID or CR followed by alphanumeric characters (e.g ID10152307, CR1234AA,...)
 * @property roles The list of roles of the Stakeholder among Traveller, Buyer and Payer. Currently only Traveller role is supported. If no input is provided, the system shall default to Traveller role. 
 * @property nationality The nationality of the Stakeholder
 * @property names Name of the Stakeholder. The full name of the stakeholder, including PTC, staffType dateOfBirthf and specialSeat must remain below 59 characters 
 */
@JsonClass(generateAdapter = true)
data class Stakeholder(
    @Json(name = "PTC") @field:Json(name = "PTC") var PTC: String? = null,
    @Json(name = "staffType") @field:Json(name = "staffType") var staffType: String? = null,
    @Json(name = "dateOfBirth") @field:Json(name = "dateOfBirth") var dateOfBirth: LocalDate? = null,
    @Json(name = "age") @field:Json(name = "age") var age: String? = null,
    @Json(name = "specialSeat") @field:Json(name = "specialSeat") var specialSeat: String? = null,
    @Json(name = "identificationCode") @field:Json(name = "identificationCode") var identificationCode: String? = null,
    @Json(name = "roles") @field:Json(name = "roles") var roles: List<Stakeholder.RolesEnum>? = null,
    @Json(name = "nationality") @field:Json(name = "nationality") var nationality: String? = null,
    @Json(name = "names") @field:Json(name = "names") var names: List<Name>? = null
) {
    /**
     * The list of roles of the Stakeholder among Traveller, Buyer and Payer. Currently only Traveller role is supported. If no input is provided, the system shall default to Traveller role. 
     * Values: TRAVELLER
     */
    @JsonClass(generateAdapter = false)
    enum class RolesEnum(val value: String) {
        @Json(name = "TRAVELLER") TRAVELLER("TRAVELLER")
    }
}
