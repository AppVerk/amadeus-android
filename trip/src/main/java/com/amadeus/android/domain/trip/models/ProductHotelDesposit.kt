/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Trip Parser
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.amadeus.android.domain.trip.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * deposit information
 * @property currencyCode The code specifying a monetary unit. Use ISO 4217, three alpha code.
 * @property decimalPlaces Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \&quot;minor unit\&quot;. Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces&#x3D;\&quot;2\&quot; to represent $85). 
 * @property amount Defines the amount without decimal separator (i.e. Amount&#x3D;8500 and DecimalPlace&#x3D;2 represent 85.00).
 * @property type Defines the price, e.g. for base fare, total...
 * @property IDCode Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.
 * @property description Describes more precisely a Price (or Tax), e.g. \&quot;Issuance Fee for Credit Card\&quot; when Price is an Airline Fees.
 * @property paymentForm Form of Payment to guarantee the booking. Authorized forms of payment for Guarantee are 1-Credit Card, 10-Travel Agent identification, ID-Customer ID, 6-Check, 4-MCO, 12-Company Name. 
 * @property paymentDetails Payment details
 */
@JsonClass(generateAdapter = true)
data class ProductHotelDesposit(
    @Json(name = "currencyCode") @field:Json(name = "currencyCode") var currencyCode: String? = null,
    @Json(name = "decimalPlaces") @field:Json(name = "decimalPlaces") var decimalPlaces: Int? = null,
    @Json(name = "amount") @field:Json(name = "amount") var amount: Int? = null,
    @Json(name = "type") @field:Json(name = "type") var type: String? = null,
    @Json(name = "IDCode") @field:Json(name = "IDCode") var IDCode: String? = null,
    @Json(name = "description") @field:Json(name = "description") var description: String? = null,
    @Json(name = "paymentForm") @field:Json(name = "paymentForm") var paymentForm: ProductHotelDesposit.PaymentFormEnum? = null,
    @Json(name = "paymentDetails") @field:Json(name = "paymentDetails") var paymentDetails: String? = null
) {
    /**
     * Form of Payment to guarantee the booking. Authorized forms of payment for Guarantee are 1-Credit Card, 10-Travel Agent identification, ID-Customer ID, 6-Check, 4-MCO, 12-Company Name. 
     * Values: _1, _10, ID, _6, _4, _12
     */
    @JsonClass(generateAdapter = false)
    enum class PaymentFormEnum(val value: String) {
        @Json(name = "1") _1("1"),
        @Json(name = "10") _10("10"),
        @Json(name = "ID") ID("ID"),
        @Json(name = "6") _6("6"),
        @Json(name = "4") _4("4"),
        @Json(name = "12") _12("12")
    }
}
